name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test-frontend:
    name: Test Frontend
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 8
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm'
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Type check
      run: pnpm exec tsc --noEmit
      
    - name: Build frontend
      run: pnpm run build
      
  test-backend:
    name: Test Backend
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
        
    - name: Cache Rust dependencies
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: src-tauri
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf libavahi-client-dev
        
    # - name: Format check
    #   run: cd src-tauri && cargo fmt --all -- --check
      
    - name: Clippy check
      run: cd src-tauri && cargo clippy --all-targets --all-features
      # run: cd src-tauri && cargo clippy --all-targets --all-features -- -D warnings
      
    - name: Build backend
      run: cd src-tauri && cargo build --verbose
      
    - name: Run backend tests
      run: cd src-tauri && cargo test --verbose

  build-tauri:
    name: Build Tauri App
    needs: [test-frontend, test-backend]
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-20.04, windows-latest, macos-latest]
        
    runs-on: ${{ matrix.platform }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 8
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm'
        
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      
    - name: Cache Rust dependencies
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: src-tauri
        
    - name: Install system dependencies (Ubuntu)
      if: matrix.platform == 'ubuntu-20.04'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf libavahi-client-dev
        
    - name: Install frontend dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Build Tauri app
      run: pnpm run tauri build
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: tauri-build-${{ matrix.platform }}
        path: |
          src-tauri/target/release/bundle/
          !src-tauri/target/release/bundle/**/.*
        retention-days: 30