name: Release Simple

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-release:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin'
            target: 'aarch64-apple-darwin'
          - platform: 'macos-latest'
            args: '--target x86_64-apple-darwin'
            target: 'x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
            target: 'x86_64-unknown-linux-gnu'
          - platform: 'windows-latest'
            args: ''
            target: 'x86_64-pc-windows-msvc'

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'pnpm'

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf libavahi-client-dev build-essential curl wget file

      - name: Install frontend dependencies
        run: pnpm install

      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.CICD_TOKEN }}
        with:
          tagName: ${{ github.event.inputs.version || github.ref_name }}
          releaseName: 'IP Chat ${{ github.event.inputs.version || github.ref_name }}'
          releaseBody: |
            ## IP Chat ${{ github.event.inputs.version || github.ref_name }}
            
            A cross-platform desktop application for local network communication and file sharing.
            
            ### Features
            - üîç **Network Discovery**: Automatic peer discovery on local network
            - üí¨ **Real-time Chat**: Instant messaging with read receipts
            - üìÅ **File Sharing**: Drag-and-drop file transfer with progress tracking  
            - ‚öôÔ∏è **Settings**: Customizable themes and preferences
            - üñ•Ô∏è **Cross-Platform**: Works on Windows, macOS, and Linux
            
            ### Downloads
            - **Windows**: Download the `.msi` installer
            - **macOS**: Download the `.dmg` file (Universal for Apple Silicon and Intel)
            - **Linux**: Download the `.AppImage` or `.deb` package
            
            ### Installation
            1. Download the appropriate file for your operating system
            2. Run the installer or AppImage
            3. Launch IP Chat from your applications menu
            4. Start discovering peers on your local network!
            
            ### What's New
            - Real-time file transfer progress tracking
            - Improved macOS file system permissions
            - Enhanced network discovery reliability
            - Bug fixes and performance improvements
          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }}